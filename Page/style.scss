// Initialise Colors  -  [1]
// @import "_variables";
// @use "_variables" as *;
@use "_variables" as var;

// At last add animations  -  [3]
%transition {
  transition: all 0.25s ease-in-out;
}
%flipIn {
  animation: flipdown 0.5s ease both;
}
@keyframes flipdown {
  0% {
    opacity: 0;
    transform-origin: top center;
    transform: rotateX(-90deg);
  }
  5% {  opacity: 1; }
  80% {   transform: rotateX(8deg);   }
  83% {   transform: rotateX(6deg);   }
  92% {   transform: rotateX(-3deg);    }
  100% {
    transform-origin: top center;
    transform: rotateX(0deg);
  }
}   

// First complete page css
html {
  width: 100%;
  height: 100%;
  perspective: 900;
  overflow-y: scroll;
  background-color: var.$grey;
  font-family: var.$sans;
  color: var.$black;
}
body {
  min-height: 0;
  display: inline-block;
  position: relative;
  left: 50%;
  margin: 90px 0;
  transform: translate( -50% , 0 );
  box-shadow: 0 10px 0 0 var.$red inset;
  background-color: var.$white;
  max-width: 450px;
  padding: 30px;
  @media ( max-width:550px ) {
    box-sizing: border-box;
    transform: translate( 0 , 0 );
    max-width: 100%;
    min-height: 100%;
    margin: 0;
    left: 0;
  }
}

h1 , h2 {
  color: var.$red;
}
h1 {
  text-transform: uppercase;
  font-size: 36px;
  line-height: 42px;
  letter-spacing: 3px;
  font-weight: 100;
  @extend %flipIn;
  animation-delay: 0.5s;
}
  
h2 {
  font-size: 26px;
  line-height: 34px;
  font-weight: 300;
  letter-spacing: 1px;
  display: block;
  background-color: var.$white;
  margin: 0;
  cursor: pointer;
}

p {
  color: var.$black;
  font-size: 17px;
  line-height: 26px;
  letter-spacing: 1px;
  position: relative;
  overflow: hidden;
  max-height: 800px;
  @extend %transition;
  opacity: 1;
  transform: translate( 0 , 0 );  
  margin-top: 14px;
  z-index: 2;
}

ul {
  list-style: none;
  perspective: 900;
  padding: 0;
  margin: 0;

  li {
    position: relative;
    padding: 0;
    margin: 0;
    padding-bottom: 4px;
    padding-top: 18px;
    border-top: 1px dotted var.$grey;
    @extend %flipIn;

    &:nth-of-type(1) {
      animation-delay: 0.75s;
    }
    &:nth-of-type(2) {
      animation-delay: 1.0s;
    }   
    &:nth-of-type(3) {
      animation-delay: 1.25s;
    }
    &:last-of-type {
      padding-bottom: 0;
    }
    }
    i {
      position: absolute;
      transform: translate( -6px , 0 );
      margin-top: 16px;
      right: 0;
      
      // // pseudo-elements  -  A CSS pseudo-element is used to style specified parts of an element.
      // // Here we created divs to make arrow symbol
      &:before , &:after {
        content: "";
        @extend %transition;
        position: absolute;
        background-color: var.$red;
        width: 3px;
        height: 9px;
      }
      // // Section - arrow [Show the open status of paragraph]
      &:before {
        transform: translate( -2px , 0 ) rotate( 45deg );
      }
      &:after {
        transform: translate( 2px , 0 ) rotate( -45deg );
      }
    }

    // When the checkbox is checked (&:checked), 
        // certain styles are applied to elements that come after it in the HTML structure (&~p and &~i).
    input[type=checkbox] {
      position: absolute;
      cursor: pointer;
      width: 100%;
      height: 100%;
      z-index: 1;
      opacity: 0;
      
      &:checked{
        &~p{
          margin-top: 0;
          max-height: 0;
          opacity: 0;
          transform: translate( 0 , 50% );
        }
        // // Section - arrow [Show the open status of paragraph]
        &~i{
          &:before {
            transform: translate( 2px , 0 ) rotate( 45deg );
          }
          &:after {
            transform: translate( -2px , 0 ) rotate( -45deg );
          }
        }
    }
  }
}
