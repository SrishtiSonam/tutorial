// At start  -  [1]
body {
  color: #fff;
  background: hsl(227, 10%, 10%);
  font: 300 1em 'Fira Sans', sans-serif;
  // include font-style, font-variant, font-weight, font-size, line-height, and font-family. 
  // By using the font shorthand, you can set multiple font properties in a single declaration.
  justify-content: center;
  align-content: center;
  align-items: center;
  text-align: center;
  min-height: 100vh;
  display: flex;
}
button {
  background: none;
  border: 2px solid;
  font: inherit;
  // same as its parent element
  line-height: 1;
  // it ensures that there is no extra vertical space between lines and the text appears compact.
  margin: 0.5em;
  padding: 1em 2em;
}
h1 { font-weight: 400; }
code { 
  color: #e4cb58;
  font: inherit;
}

// Initialize colors  -  [2]
@import "_variables";


// Color and hover for each button
// Declaring Variable for color and hover  -  [3]
@each $button, $color in $colors {          //  iterates over each item  -  current item to the variable $color and the corresponding key to the variable $button.
  .#{$button} {
    --color: #{$color};
    // sets a CSS custom property (--color) within the selector (.#{$button}). 
    --hover: #{adjust-hue($color, 45deg)};
    // adjust-hue() function in Sass shifts the hue of a color by a specified angle, effectively altering its appearance.
    // produce variations of the original color, allowing you to create different shades or effects while maintaining the overall color tone.
  }
}


// Adding Color and hover to button  -  [4]
button {  
    color: var(--color);
    transition: 0.25s;
    &:hover,
    &:focus { 
      border-color: var(--hover);
      color: #fff;
    }
}


//    --    Effects for each button  -  [5]

// // https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow

// // .fill:hover,
// // .fill:focus {
// //   box-shadow: inset 0 0 0 2em var(--hover);
// // }

// Color fills the box
.fill {
  &:hover, &:focus {
    box-shadow: inset 0 0 0 2em var(--hover);
  }
}

// Pulse Box Shadow
.pulse {
  &:hover, &:focus {
    animation: pulse 1s;
    box-shadow: 0 0 0 2em transparent;
  }
}
@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--hover); }
}

// Button Gate Close 
.close {
  &:hover, &:focus {
    box-shadow: 
      inset -3.5em 0 0 0 var(--hover),
      inset 3.5em 0 0 0 var(--hover);  
  }
}

// Button lifts up
.raise {
  &:hover, &:focus {
    box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
    transform: translateY(-0.25em);
  }
}

// Color fills up
.up {
  &:hover, &:focus {
    box-shadow: inset 0 -3.25em 0 0 var(--hover);
  }
}

// Color slides from one direction to other
.slide {
    &:hover, &:focus{
      box-shadow: inset 6.5em 0 0 0 var(--hover);
  }
}

// The offset button
.offset {  
  box-shadow: 
    0.3em 0.3em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);
  &:hover,
  &:focus {
    box-shadow: 
      0 0 0 0 var(--hover),
      inset 6em 3.5em 0 0 var(--hover);
  }
}